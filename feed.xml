<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://fmcgeough.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fmcgeough.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-06-19T16:06:32+00:00</updated><id>https://fmcgeough.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Using Macros for Elxiir Unit Tests</title><link href="https://fmcgeough.github.io/blog/2024/macros-ini-unit-tests/" rel="alternate" type="text/html" title="Using Macros for Elxiir Unit Tests"/><published>2024-06-19T11:30:00+00:00</published><updated>2024-06-19T11:30:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/macros-ini-unit-tests</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/macros-ini-unit-tests/"><![CDATA[<p>One of the strengths of the Elixir language is a powerful first-class macro language. The creator of Elixir, José Valim, based on the development of Elixir macros (in part) on how Lisp macros work. Macros are a form of metaprogramming. It’s writing code that, in turn, writes code.</p> <p>The unit test framework that is used for Elixir is <a href="https://hexdocs.pm/ex_unit/ExUnit.html">ExUnit</a>. If you look at the ExUnit code you can see that it makes use of the macro language to define the primitives used in Elixir’s unit tests. For example, “describe” and “test” are both macros in the ExUnit.Case module.</p> <p>It’s a very good thing to understand Elixir macros. If nothing else you will run into libraries (like ExUnit) that make use of them (Ecto - the database ORM for Elixir - makes extensive use of macros to define a DSL to simplify dealing with relational databases). However, once you learn about Elixir macros its a very very good idea to limit your use of them. Although macros can make a developer’s life much easier they can also make it much more difficult by making the code someone is trying to maintain exceedingly complex.</p> <p>Once use of macros that I’ve used and have seen multiple developers use is to define a macro for a test that defines the input used for the test itself. This means that instead of writing n tests that all look very similar you can write one test which takes a list of n items and generates n tests. The easiest way to understand this is with an example.</p> <p>Suppose you have an Ecto.Schema for a database table in your app. It has some required fields. If those fields are not provided when calling the <code class="language-plaintext highlighter-rouge">Ecto.Changeset</code> function <code class="language-plaintext highlighter-rouge">changeset/2</code> you want the changeset to be invalid. I’ll use a contrived example to demonstrate how I’d develop that code and use a macro to generate unique tests. The examples is an <code class="language-plaintext highlighter-rouge">accounts</code> table. We’ll require that when building an <code class="language-plaintext highlighter-rouge">Ecto.Changeset</code> that <code class="language-plaintext highlighter-rouge">:account_id</code> and <code class="language-plaintext highlighter-rouge">account_state</code> are required. All the other fields are optional. Here’s the module defining the <code class="language-plaintext highlighter-rouge">Ecto.Schema</code>.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defmodule Account do
  @moduledoc """
  Ecto.Schema for the accounts table
  """
  use Ecto.Schema
  import Ecto.Changeset

  schema "accounts" do
    field(:account_id, :string)
    field(:account_state, :string)
    field(:url, :string)
    field(:owner_email, :string)
    field(:account_score, :integer)
    field(:current_billing_status, :string)
    field(:ui_schema, :string)

    timestamps()
  end

  @doc """
  What fields are used in this table (excludes default timestamp fields)?
  """
  def fields do
    [:account_id, :account_state, :url, :owner_email, :account_score, :current_billing_status, :ui_scheme]
  end

  @doc """
  What fields are required (not null) in this table?
  """
  def required do
    [:account_id, :account_state]
  end

  def changeset(struct, params \\ %{}) do
    struct
    |&gt; cast(params, fields())
    |&gt; validate_required(required())
  end
end
</code></pre></div></div> <p>If we want to test that we get invalid Changesets when we don’t provide the required fields we could have a test like this:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defmodule AccountTest do
  use ExUnit.Case

  @valid_account_params %{account_id: "123", account_state: "active", url: "http://example.com", owner_email: "test@example.com"}

  for required_field &lt;- Account.required() do
    test "error is generated when '#{required_field}' field is missing" do
      params = Map.delete(@valid_account_params, unquote(required_field))
      changeset = Account.changeset(%Account{}, params)
      refute changeset.valid?
      assert changeset.errors == [{unquote(required_field), {"can't be blank", [validation: :required]}}]
    end
  end
end
</code></pre></div></div> <p>This lets us test each field independently. If the test fails it will tell us the name of the field that failed (along with the failing line). For example, lets change the code to add in a field that is not required.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defmodule AccountTest do
  use ExUnit.Case

  # for required_field &lt;- Account.required() do
  #   test "error is generated when '#{required_field}' field is missing" do
  #     params = Map.delete(@valid_account_params, unquote(required_field))
  #     changeset = Account.changeset(%Account{}, params)
  #     refute changeset.valid?
  #     assert changeset.errors == [{unquote(required_field), {"can't be blank", [validation: :required]}}]
  #   end
  # end

  for required_field &lt;- Account.required() ++ [:url] do
    test "error is generated when '#{required_field}' field is missing" do
      params = Map.delete(@valid_account_params, unquote(required_field))
      changeset = Account.changeset(%Account{}, params)
      refute changeset.valid?
      assert changeset.errors == [{unquote(required_field), {"can't be blank", [validation: :required]}}]
    end
  end
end
</code></pre></div></div> <p>When <code class="language-plaintext highlighter-rouge">mix test</code> is run we see the following:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  1) test error is generated when 'url' field is missing (AccountTest)
     test/account_test.exs:16
     Expected false or nil, got true
     code: refute changeset.valid?
     stacktrace:
       test/account_test.exs:19: (test)
</code></pre></div></div> <p>The error line (19) is for the line <code class="language-plaintext highlighter-rouge">refute changeset.valid?</code> in our unit test file. The first line tells us that the <code class="language-plaintext highlighter-rouge">url</code> field is what caused the problem.</p> <p>There are a number of ways you can use macros to make your unit tests easier to read and maintain. You should always keep the maintainability of the code in mind when you decide to start using a macro.</p>]]></content><author><name></name></author><category term="elixir"/><category term="mix"/><summary type="html"><![CDATA[When it is good to use a macro for a unit test]]></summary></entry><entry><title type="html">Never make it home by seven</title><link href="https://fmcgeough.github.io/blog/2024/been-too-long-at-the-fair/" rel="alternate" type="text/html" title="Never make it home by seven"/><published>2024-06-16T10:25:00+00:00</published><updated>2024-06-16T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/been-too-long-at-the-fair</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/been-too-long-at-the-fair/"><![CDATA[<p>In the early 1970s a singer-songwriter named Jeff Zoss was playing at the Passim’s club in Cambridge. Bonnie Raitt’s manager, Dick Waterman, happened to be in the club. Zoss played “Been too long at the fair” and other songs. After the show Waterman asked Zoss for a tape of the song to play for Raitt. It was included on her second album (along with another Zoss song “I Gave My Love A Candle”). This was called “Give It Up”. Its an amazing album but Raitt didn’t achieve her breakout commercial success until years later with the “Nick of Time” album in 1989.</p> <p>Passim’s was an amazing Boston institution and an incredible number of artists performed there. I think I saw a couple dozen shows there when I lived in Boston. I never saw Jeff Zoss perform there but his songwriting is incredible. I heard Bonnie Raitt’s version of “Been Too Long At the Fair” before I heard the original. I thought it was incredibly beautiful. I’m glad I also got to see Bonnie Raitt perform. She put on a great show (this was also in Boston but much later).</p> <p>You can see a YouTube video of Jeff Zoss (and Jeff Adkins) performing the song on British TV in 2016. https://www.youtube.com/watch?v=RaAdtAw1jrg. And there are multiple Bonnie Raitt versions on YouTube (of course). But the remastered version from the second album is well worth a listen. https://www.youtube.com/watch?v=MKgNgGnpaCo. The history of <a href="https://en.wikipedia.org/wiki/Club_Passim">Club Passim</a> is on Wikipedia.</p> <p>Anyway, at some point I recorded the song on my phone during practice sessions. It was one of my electrics and has a ton of atmospheric reverb going on. I found it on a thumb drive and thought I’d post it if only to point out that its my favorite Bonnie Raitt song. That probably has to do with both that its a beautiful song and when I heard it. Raitt’s voice and the production were unusual for the time and the song is just something else.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-06-been-too-long-at-the-fair.mp3" controls=""/> </figure> </div> </div> <p>There’s another song called “(Have I Stayed) Too Long at the Fair” written by Billy Barnes and recorded by Barbra Streisand. Going to the fair and staying just a bit too long is an old metaphor. There’s even the old English nursery rhyme “Johnny’s So Long at the Fair” from the 1700s. The phrase “it’s possible to stay too long at the Fair” was used by author Joan Didion in her essay “Goodbye to All That” that appears in “Slouching Towards Bethlehem”.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Jesus cried, wept and died
I guess he went up to heaven
I've been downtown such a long, long time
I'll never make it home by seven
Won't you come and take me home
I've been too long at the fair
And Lord, I just can't stand it anymore
</code></pre></div></div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="electric"/><category term="pedal"/><summary type="html"><![CDATA[Recording using the Strymon Clouburst reverb pedal]]></summary></entry><entry><title type="html">And sometimes I use a guitar pedal</title><link href="https://fmcgeough.github.io/blog/2024/strymon-clouburst/" rel="alternate" type="text/html" title="And sometimes I use a guitar pedal"/><published>2024-06-08T10:25:00+00:00</published><updated>2024-06-08T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/strymon-clouburst</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/strymon-clouburst/"><![CDATA[<p>I sometimes wish I was more fluent in guitar pedals. I’m just not. But I do have a couple of cool pedals that I’ve had some good times with. One is the <a href="https://www.strymon.net/product/cloudburst">Strymon Cloudburst</a>. Its a reverb pedal with interesting atmospheric effects. People that work at Strymon made a great video (probably multiple) demonstrating its use. Go watch them. It’s super cool.</p> <p>This is me. Using the Shabat Lion GB into a Strymon Cloudburst pedal and into the <a href="https://3rdpower.com/products/amps/wooly-coats-spanky-mkii/">3rd Power MK II Spanky amp</a>. This is an amazing amp. I liked it from the first time I plugged in.</p> <p>I was using the neck-pickup on the Shabat. I was recording with my iPhone. It definitely is atmospheric and was fun to play.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-06-shabat_neck_pickup.mp3" controls=""/> </figure> </div> </div> <p>This reminded of something I did a few years when Game of Thrones was still on. When Arya was running in the dark to go kill the Ice King I figured what she really needed was some background music. :-) So I recorded this.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-06-08-game-of-thrones.mp3" controls=""/> </figure> </div> </div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="electric"/><category term="pedal"/><summary type="html"><![CDATA[Recording using the Strymon Clouburst reverb pedal]]></summary></entry><entry><title type="html">First Guitar</title><link href="https://fmcgeough.github.io/blog/2024/first-guitar/" rel="alternate" type="text/html" title="First Guitar"/><published>2024-06-07T10:25:00+00:00</published><updated>2024-06-07T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/first-guitar</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/first-guitar/"><![CDATA[<p>After moving to Atlanta in 1990 I bought a guitar from <a href="https://www.maplestreetguitars.com/">Maple Street Guitars</a>. This is a wonderful guitar shop near public transportation (Marta). They carry both acoustic and electric guitars. The folks that work there are friendly and extremely knowledgable. You’ll see postings about one or more of them appearing in music venues around town.</p> <p>Maple Street carries Taylor guitars and I bought a Taylor 310. Taylor doesn’t make these anymore. It’s a terrific guitar though. Its Sapele back and sides and Sitka Spruce top. It wasn’t very expensive at the time and they are relatively inexpensive now if you want to pick up one used.</p> <p>Sapele is part of the Meliaceae family - just like Honduran Mahogany. It has a similar type of sound and is less expensive (and probably more sustainable). )</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/2024_taylor_310_front.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/2024_taylor_310_back.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Taylor 310 front and back </div> <p>I have this guitar hanging downstairs by my couch so I can pick it up whenever the mood strikes me. Here’s a couple of small samples.</p> <p>One is a recording using Open-G tuning and a ceramic slide from <a href="https://therockslide.com/">The Rockslide</a>. I got a couple of different slides from them while I was trying to figure out what worked best for me. They are really well crafted. I use this particular slide on my ring finger. And this is just random stuff I was fiddling around with.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024_taylor_310_open_g_slide.mp3" controls=""/> </figure> </div> </div> <div class="caption"> Open-G with a ceramic slide </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-06-10-taylor-310.mp3" controls=""/> </figure> </div> </div> <div class="caption"> Random clip in standard tuning </div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="acoustic"/><summary type="html"><![CDATA[Description of My Taylor 310]]></summary></entry><entry><title type="html">Shabat Lion GB</title><link href="https://fmcgeough.github.io/blog/2024/shabat-guitar/" rel="alternate" type="text/html" title="Shabat Lion GB"/><published>2024-06-02T10:25:00+00:00</published><updated>2024-06-02T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/shabat-guitar</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/shabat-guitar/"><![CDATA[<p>The electric guitar that I have owned for the longest time came from <a href="https://righteousguitars.com/">Righteous Guitars</a> in Roswell, Georgia. I bought it used. Its a <a href="https://shabatguitars.com/product/lion-gb/">Shabat Lion GB</a>. The body is sugar pine and the neck is maple rosewood. It has the <a href="https://www.lollarguitars.com/lollar-charlie-christian-pickups">Lollar Charlie Christian pickup</a> installed in the neck position and the <a href="https://www.lollarguitars.com/lollar-telecaster-pickups/bs-tele-bridge">Lollar B.S.Tele Bridge</a>. It’s finish is nitrocellulose Candy Appple Red.</p> <p>Righteous Guitars is a wonderful guitar store. Amazing selection and staff and well worth visiting.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/shabat_lion_gb.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Shabat Lion GB </div> <p>I found some recording of the guitar. Definitely a phone recording. Using the bridge pickup and the MK II Spanky amp.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-06-wild_horses_shabat_lion.mp3" controls=""/> </figure> </div> </div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="electric"/><summary type="html"><![CDATA[Description of My Shabat Lion GB]]></summary></entry><entry><title type="html">CI, Elixir and mix.lock</title><link href="https://fmcgeough.github.io/blog/2024/ci-and-mix-lock-file/" rel="alternate" type="text/html" title="CI, Elixir and mix.lock"/><published>2024-06-01T11:30:00+00:00</published><updated>2024-06-01T11:30:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/ci-and-mix-lock-file</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/ci-and-mix-lock-file/"><![CDATA[<p>Elixir’s mix.lock file is used to store information on all the dependencies for your application. It should be checked into source control just like your mix.exs file.</p> <p>If you are coming from other languages you probably have seen this same concept. For example, in Python there is the <a href="https://github.com/kennethreitz/pipenv">Pipfile and the Pipfile.lock</a>. In Ruby there is the <a href="https://bundler.io/">Gemfile and the Gemfile.lock</a>. In Javascript there is the <a href="https://docs.npmjs.com/">package-lock.json</a>.</p> <p>I recommend for continuous integration (CI) for Elixir you should use the command:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mix deps.get --check-locked
</code></pre></div></div> <p>This is available in v1.15.0 and greater. It will raise if there are pending changes to the lockfile. This works to ensure the lock file that you check into source control is the one that is being used to build your released software.</p> <p>See the documentation at https://hexdocs.pm/mix/Mix.Tasks.Deps.Get.html.</p>]]></content><author><name></name></author><category term="elixir"/><category term="mix"/><summary type="html"><![CDATA[Ensure your mix.lock file is not changing without your knowledge]]></summary></entry><entry><title type="html">Another Guitar Recording</title><link href="https://fmcgeough.github.io/blog/2024/more-music/" rel="alternate" type="text/html" title="Another Guitar Recording"/><published>2024-05-30T10:25:00+00:00</published><updated>2024-05-30T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/more-music</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/more-music/"><![CDATA[<p>This was a song I recorded a while ago. I really can’t remember when I did it but it was probably around the time the song was released by the Avett Brothers (2008?).</p> <p>It’s the Avett Brother’s song “The Greatest Sum”. Visit their <a href="https://www.theavettbrothers.com/">website</a> for the latest releases and tour information.</p> <p>I enjoyed the lyrics.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>This and who I used to be
Don’t matter much at all to me
The pit you dug to plant your feet
A far cry from my destiny
Not even the clouds
Not even the past
Not even the hands of God
Could hold me back from you
</code></pre></div></div> <p>It looks like the recording was done on my phone so the quality isn’t so hot.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-05-the_greatest_sum.mp3" controls=""/> </figure> </div> </div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="acoustic"/><summary type="html"><![CDATA[A simple recording of a nice Avett Brothers song]]></summary></entry><entry><title type="html">Vic Chesnutt and Old Cover from 2009</title><link href="https://fmcgeough.github.io/blog/2024/vic-chestnut-supernatural/" rel="alternate" type="text/html" title="Vic Chesnutt and Old Cover from 2009"/><published>2024-05-30T10:25:00+00:00</published><updated>2024-05-30T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/vic-chestnut-supernatural</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/vic-chestnut-supernatural/"><![CDATA[<p>This is another recording I found from long ago. It’s really tinny and I probably had turned on recording on my Mac laptop while fooling around.</p> <p><a href="https://en.wikipedia.org/wiki/Vic_Chesnutt">Vic Chestnutt</a> was an influential musician from Athens, Georgia. He collaborated with a large number of musicians and had an outsized influence compared to the sales of his albums.</p> <p>He was partially paralyzed at 18 after a night of drinking and driving. On <a href="https://www.youtube.com/watch?v=jXFE-hdxM9A">Terry Gross’ Fresh Air</a> he said he was “a quadriplegic from [his] neck down”, and although he had feeling and some movement in his body, he could not walk “functionally” and that, although he realized shortly afterward that he could still play guitar, he could only play simple chords.</p> <p>He passed away in 2009 on Christmas Day as a result of an overdose of muscle relaxants. He had dealt with consistent pain and lacked insurance to cover needed surgeries.</p> <p>This recording is really bad. Very tinny. Since I just sort of stumbled over it I don’t know how it was recorded but my I think it was probably captured on a Mac laptop and its not so great microphone. It’s Chesnutt’s song Supernatural. This was released in 1994 and covered by numerous artists. In any case I decided to post whatever I managed to scrounge together so here it is.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-05-supernatural.mp3" controls=""/> </figure> </div> </div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="acoustic"/><summary type="html"><![CDATA[Vic Chesnutt passed in 2009 and I recorded one of his songs]]></summary></entry><entry><title type="html">Flushing Ecto db connections periodically in Elixir</title><link href="https://fmcgeough.github.io/blog/2024/ecto-periodic-flush/" rel="alternate" type="text/html" title="Flushing Ecto db connections periodically in Elixir"/><published>2024-05-29T15:05:00+00:00</published><updated>2024-05-29T15:05:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/ecto-periodic-flush</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/ecto-periodic-flush/"><![CDATA[<p>In Elixir’s db_connection library version 2.4.1 and above there is a facility to disconnect all the connections.</p> <p>The myxql module <code class="language-plaintext highlighter-rouge">MyXql.Client</code> <code class="language-plaintext highlighter-rouge">do_connect/1</code> function is what actually translates your “hostname” into an IP address (via <code class="language-plaintext highlighter-rouge">gen_tcp.connect/4</code>). By periodically calling <code class="language-plaintext highlighter-rouge">disconnect_all/3</code> all the existing connections are dropped (within the time limit you specify) and <code class="language-plaintext highlighter-rouge">do_connect/1</code> gets called again for each connection so if there has been a DNS change it’ll be picked up.</p> <p>I wouldn’t try this unless you can identify an obvious problem. The db_connection library is managing some complex things already. You don’t want to add complexity to it if you can avoid it. In any case, here’s some sample code that can do the work.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>defmodule Ecto.PeriodicFlush do
  @moduledoc """
  Run a background process to periodically disconnect from databases
  """
  use GenServer

  @flush_interval 30_000

  def start_link(opts) do
    GenServer.start_link(__MODULE__, opts, name: opts[:name] || __MODULE__)
  end

  @doc """
  Flush all the connections for a list of Ecto.Repo's
  Flushing connections ensures that our driver does a DNS lookup
  again
  """
  def flush_connections(repos) when is_list(repos) do
    Enum.each(repos, fn repo -&gt;
      %{pid: pid, opts: opts} = Ecto.Adapter.lookup_meta(repo)
      DBConnection.disconnect_all(pid, 15_000, opts)
    end)
  end

  @impl true
  def init(opts) do
    flush_interval = Keyword.get(opts, :flush_interval, @flush_interval)
    repos = Keyword.get(opts, :repos, [])
    schedule_flush(flush_interval)
    {:ok, %{flush_interval: flush_interval, repos: repos}}
  end

  @impl true
  def handle_info(:flush_connections, %{flush_interval: flush_interval, repos: repos} = state) do
    flush_connections(repos)
    schedule_flush(flush_interval)
    {:noreply, state}
  end

  defp schedule_flush(flush_interval) do
    Process.send_after(self(), :flush_connections, flush_interval))
  end
end
</code></pre></div></div>]]></content><author><name></name></author><category term="elixir"/><category term="ecto"/><category term="myxql"/><summary type="html"><![CDATA[Sample code to show how to use disconnect_all]]></summary></entry><entry><title type="html">Mavis Mule and Learning Slide</title><link href="https://fmcgeough.github.io/blog/2024/mule-resonator-intro/" rel="alternate" type="text/html" title="Mavis Mule and Learning Slide"/><published>2024-05-29T10:25:00+00:00</published><updated>2024-05-29T10:25:00+00:00</updated><id>https://fmcgeough.github.io/blog/2024/mule-resonator-intro</id><content type="html" xml:base="https://fmcgeough.github.io/blog/2024/mule-resonator-intro/"><![CDATA[<p>On Jul 31, 2023 I received my Mavis Mule resonator guitar. These guitars are built by <a href="https://www.muleresophonic.com/">Mule Resophonic</a> out of Saginaw Michigan. The company was started by Matt Eich. The guitars he and his team creates are very cool and I was happy to be able to get one.</p> <p>Since its a small company you (generally) order your guitar with a small deposit. When you get to the top of the queue Matt reaches out to go over the specs for what you want built. The build process begins and you’ll get photos as the build is done.</p> <p>Finally, when the guitar is complete you get some final photos. You settle up the bill and the guitar is shipped to you. Here’s some photos of my Mavis.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/mavis_mule2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/mavis_mule3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Mavis with roasted maple, solidbody construction, a resonator cone and a single humbucking pickup with master volume and tone controls. </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/mavis_mule1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> It sure is a beautiful instrument! </div> <p>I’ve played around with the Mavis immediately (of course). I had to set it aside a bit as I dealt with other things but I finally got back to it.</p> <p>One of the things I wanted to learn more about is slide guitar. I’ve got quite a long way to go to get to where I’d like to be with this. In order to get better I record practice sessions and listen to them later. You might think you sound fine when you are playing. Recording lets you review what you were playing, find problems with it or things you need to work on and improve. And you can just toss the recordings since its just practice anyway.</p> <p>These are a couple snippets from a practice session. The guitar is tuned to Open-G. I’m using a slide ring made by <a href="https://blackmountainpicks.com/">Black Mountain</a>. They make very inventive products for guitar. A normal slide is used on one finger and that finger becomes unavailable for playing chords, etc. With a slide ring you can use all your standard chord shapes.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/mule_finger_picking_and_slide.mp3" controls=""/> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/2024-05-pick_and_slide.mp3" controls=""/> </figure> </div> </div>]]></content><author><name></name></author><category term="guitar"/><category term="recording"/><category term="acoustic"/><summary type="html"><![CDATA[Describes the Mule Resophonic Guitar company and my attempts to learn slide guitar]]></summary></entry></feed>